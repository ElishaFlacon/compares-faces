import React, { useState } from 'react';
import axios from 'axios';
import './App.css';
import { Container, Typography, ToggleButtonGroup, ToggleButton, Box } from '@mui/material';
import Find from './components/Find';
import ModalForResults from './components/ModalForResults';
import Upload from './components/Upload';


// console.error('–±—Ä–æ, –∑–∞–∫—Ä–æ–π –∫–æ–Ω—Å–æ–ª—å!');


// TODO —Å–¥–µ–ª–∞—Ç—å –º–µ–º–æ–º–∏–∑–∞—Ü–∏—é –¥–ª—è –≤—Å–µ–≥–æ! –∞ —Ç–æ —Ç—É—Ç –ø–∏–∑–¥–µ—Ü 
// TODO –∏ —Å–¥–µ–ª–∞—Ç—å –º–æ–¥–∞–ª–æ—á–∫–∏, –¥–ª—è –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ—ã –∫–æ–≥–¥–∞ –±—ã–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —Ñ–∞–π–ª—ã –∏–ª–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
// TODO –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–æ—É—Ç—ã
// TODO –¥–æ–±–∞–≤–∏—Ç—å config.js –∏ —Ç—É–¥–∞ –≤—ã–Ω–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç –∏ –¥–µ—Ñ–æ–ª—Ç –∞–¥—Ä–µ—Å—Å –∏ –≤—Å—è–∫–æ–µ —Ç–∞–∫–æ–µ


function App() {
    const aboutText = 'DOSY - —Å–µ—Ä–≤–∏—Å –ø–æ–∏—Å–∫–∞ –ª—é–¥–µ–π –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.\
     –ë–ª–∞–≥–æ–¥–∞—Ä—è —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π –∏ –º–∞—à–∏–Ω–Ω–æ–º—É –æ–±—É—á–µ–Ω–∏—é\
     –º—ã –ø–æ–º–æ–∂–µ–º –≤–∞–º –Ω–∞–π—Ç–∏ –Ω—É–∂–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞ –∏–ª–∏ –æ—á–µ–Ω—å –Ω–∞ –Ω–µ–≥–æ –ø–æ—Ö–æ–∂–µ–≥–æ\
     –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Å–µ–∫—É–Ω–¥.–†–µ–∑—É–ª—å—Ç–∞—Ç–æ–º —è–≤–ª—è–µ—Ç—Å—è –ø–æ–ª–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–µ–ª–æ–≤–µ–∫–µ.';

    const liabilityText = '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–π—Ç–µ –Ω–∏–∫–∞–∫–æ–π –ª–∏—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.\
     DOSY –Ω–µ –Ω–µ—Å–µ—Ç –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∑–∞ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –≤–∞—à–µ–π –æ—Ç–ø—Ä–∞–≤–∫–∏.';


    // –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ç–æ–∫
    const [valuePicture, setValuePicture] = useState('');

    const pictureHandler = (event) => {
        console.log('pictureHandler');
        if (!event.target.files[0]) {
            return;
        }

        setValuePicture(event.target.files);
    }


    // –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–æ–≤–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞
    const [valueNewPerson, setValueNewPerson] = useState({
        name: '',
        age: '',
        gender: '',
        description: '',
    });

    const newPersonHandler = (value) => {
        console.log('valueperson');
        setValueNewPerson(value);
    }

    const uploadHandler = async () => {
        console.log('uploadHandler');
        const formData = new FormData();

        formData.append('picture', valuePicture[0]);
        for (const [key, value] of Object.entries(valueNewPerson)) {
            formData.append(key, value);
        }

        setValuePicture('');
        setValueNewPerson({
            name: '',
            age: '',
            gender: '',
            description: '',
        });

        const response = await axios.post('http://localhost:5000/api/post/upload-person', formData);

        if (!response.data.load) {
            alert('–î–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã! –í–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –Ω–µ –º–æ–∂–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –ª–∏—Ü–æ –Ω–∞ —Ñ–æ—Ç–æ!');
            return;
        }

        alert('–î–∞–Ω–Ω—ã–µ –±—ã–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!');

        return response.data;
    }


    // –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –Ω–∞–π–¥–µ–Ω—ã—Ö –ª—é–¥—è—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞
    const [valuePersons, setValuePersons] = useState('');

    const getPersons = (data) => {
        setValuePersons(data);
    }


    // –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–∏—Å–∫–∞
    const [modalState, setModalState] = useState(false);

    const modalHasOpen = () => {
        setModalState(true);
    }
    const modalHasClose = () => {
        setValuePicture('');
        setValuePersons('');
        setModalState(false);
    }


    // –¥–ª—è –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–∞–π—Ç–∏ –∏–ª–∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å
    const [menu, setMenu] = useState('find');
    const menuChange = (event, select) => {
        console.log('menuChange');
        if (!select) {
            return;
        }

        setMenu(select);
    }

    // const selectedOptions = 


    return (
        <Container className='app'>
            <Box className='main flex-center-column'>
                <div className="dosy-logo" />

                <Typography className='text-block' fontSize={13}>
                    {aboutText}
                </Typography>

                <ToggleButtonGroup color="primary" value={menu} exclusive onChange={menuChange}>
                    <ToggleButton className='toglbtn' value="find">–ü–æ–∏—Å–∫</ToggleButton>
                    <ToggleButton className='toglbtn' value="upload">–ó–∞–≥—Ä—É–∑–∏—Ç—å</ToggleButton>
                </ToggleButtonGroup>

                {menu === 'find'
                    ? <Find
                        picture={valuePicture}
                        pictureHandler={pictureHandler}

                        modalOpen={modalHasOpen}
                        modalClose={modalHasClose}

                        getPersons={getPersons}
                    />
                    : <Upload
                        picture={valuePicture}
                        pictureHandler={pictureHandler}

                        person={valueNewPerson}
                        changeHandler={newPersonHandler}

                        uploadHandler={uploadHandler}
                    />
                }

                <ModalForResults open={modalState} closeHandler={modalHasClose} data={valuePersons} />

                <Typography className='text-block' fontSize={13}>
                    {liabilityText}
                </Typography>

                <Typography className='text-block' fontSize={13}>
                    üõà –ù–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–º–µ–µ—Ç –æ—Ç–∫—Ä—ã—Ç—ã–π {
                        <a rel="noreferrer" className='link' href="https://github.com/ElishaFlacon/compares-faces">
                            –∏—Å—Ö–æ–¥—ã–Ω–π –∫–æ–¥
                        </a>
                    }.
                </Typography>
            </Box>
        </Container>
    );
}


export default App;
